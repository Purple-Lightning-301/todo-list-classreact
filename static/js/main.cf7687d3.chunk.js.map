{"version":3,"sources":["components/Form.js","components/ToDo.js","components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputTextHandler","event","props","setInputText","target","value","submitToDoHandler","preventDefault","setToDos","toDos","text","inputText","completed","id","Math","random","statusHandler","setStatus","className","this","onChange","type","onClick","name","React","Component","ToDo","deleteHandler","filter","element","todo","completeHandler","toggleComplete","state","ToDoList","filterToDos","map","App","filterHandler","status","setFilterToDos","saveLocalToDos","localStorage","setItem","JSON","stringify","getLocal","getItem","todoLocal","parse","bind","prevProps","prevStates","length","arr","setState","newInputText","newStatus","newArr","index","findIndex","console","log","newToDos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf7687d3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Form extends React.Component {\r\n\r\n\r\n    inputTextHandler = (event) => {\r\n    \r\n        this.props.setInputText(event.target.value);\r\n    }\r\n    submitToDoHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.setToDos(\r\n             [...this.props.toDos, {text: this.props.inputText, completed: false, id: Math.random() *100}]\r\n        );\r\n        // this.props.setToDos(\r\n        //      {text: this.props.inputText, completed: false, id: Math.random() *100}\r\n        // );\r\n        this.props.setInputText(\"\");\r\n    }\r\n    statusHandler = (event) => {\r\n      this.props.setStatus(event.target.value)\r\n    }  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"content\">\r\n          <form>\r\n            <input\r\n              value={this.props.inputText}\r\n              onChange={(event) => this.inputTextHandler(event)}\r\n              type=\"text\"\r\n              className=\"todo-input\"\r\n            />\r\n            <button onClick={(event) => this.submitToDoHandler(event)} type=\"submit\">\r\n              <i className=\"fas fa-plus-square\" />\r\n            </button>\r\n          </form>\r\n          <div className=\"select\">\r\n            <select\r\n              onChange={(event) => this.statusHandler(event)}\r\n              name=\"todos\"\r\n              className=\"filter-todo\"\r\n            >\r\n              <option value=\"all\">All</option>\r\n              <option value=\"completed\">Completed</option>\r\n              <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nclass ToDo extends React.Component {\r\n constructor(props) {\r\n     super(props);\r\n     this.state = {\r\n         id: \"\",\r\n     }\r\n }\r\n \r\n    deleteHandler = () => {\r\n        this.props.setToDos(this.props.toDos.filter(\r\n            (element) => element.id !== this.props.todo.id\r\n        ))\r\n    };\r\n\r\n    completeHandler = (id) => {\r\n        this.props.toggleComplete(id) ;\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"todo\">\r\n          <li\r\n            className={`todo-item ${this.props.todo.completed ? \"completed\" : \"\"}`}\r\n          >\r\n            {this.props.text}\r\n          </li>\r\n          <button onClick={() => this.completeHandler(this.props.todo.id)} className=\"complete-btn\">\r\n            <i className=\"fas fa-check\"></i>\r\n          </button>\r\n          <button onClick={() => this.deleteHandler()} className=\"trash-btn\">\r\n            <i className=\"fas fa-trash\"></i>\r\n          </button>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport ToDo from \"../components/ToDo\";\r\n\r\nclass ToDoList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"todo-container\">\r\n          <ul className=\"todo-list\">\r\n            {this.props.filterToDos.map((todo) => (\r\n              <ToDo\r\n                key={todo.id}\r\n                text={todo.text}\r\n                toDos={this.props.toDos}\r\n                setToDos={this.props.setToDos}\r\n                todo={todo}\r\n                toggleComplete = {this.props.toggleComplete}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDoList;","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: \"\",\n      toDos: [],\n      status: \"all\",\n      filterToDos: [],\n    };\n    this.setStatus = this.setStatus.bind(this);\n    this.toggleComplete = this.toggleComplete.bind(this) ;\n  }\n  // setToDos(newToDos) {\n  //   console.log(newToDos)\n  //   let arr = [...this.state.toDos, newToDos]\n  //   this.setState({toDos: arr})\n  //   console.log(this.state.toDos);\n  // }\n  componentDidMount() {\n    this.getLocal();\n  }\n  componentDidUpdate(prevProps, prevStates) {\n   \n    if (this.state.status !== prevStates.status || this.state.toDos.length !== prevStates.toDos.length) {\n      this.filterHandler();\n      this.saveLocalToDos();\n    }\n  }\n  \n  setToDos(arr) {\n    this.setState({ toDos: arr });\n  }\n  setInputText(newInputText) {\n    this.setState({ inputText: newInputText });\n  }\n  setStatus(newStatus) {\n    this.setState({ status: newStatus });\n  }\n  setFilterToDos(newArr) {\n    this.setState({ filterToDos: newArr });\n  }\n\n  filterHandler = () => {\n    switch (this.state.status) {\n      case \"completed\":\n        this.setFilterToDos([\n          // ...this.state.filterToDos, \n          ...this.state.toDos.filter((todo) => todo.completed === true),\n        ]);\n        break;\n      case \"uncompleted\":\n        this.setFilterToDos([\n          // ...this.state.filterToDos, \n          ...this.state.toDos.filter((todo) => todo.completed === false),\n        ]);\n        break;\n      default:\n        this.setFilterToDos([\n          // ...this.state.filterToDos, \n          ...this.state.toDos]);\n        break;\n    }\n  };\n\n  saveLocalToDos = () => {\n    localStorage.setItem(\"toDos\", JSON.stringify(this.state.toDos));\n  };\n  getLocal = () => {\n    if (localStorage.getItem(\"toDos\") === null) {\n      localStorage.setItem(\"toDos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"toDos\"));\n      this.setToDos(todoLocal);\n    }\n  };\n  toggleComplete(id){\n    const index = this.state.toDos.findIndex(value=>{\n      return value.id === id ;\n    }) ;\n    console.log(index) ;\n    this.state.toDos[index].completed = !this.state.toDos[index].completed ;\n    this.setState({\n      toDos : this.state.toDos,\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">Todo-list</div>\n        <Form\n          toDos={this.state.toDos}\n          setToDos={(newToDos) => this.setToDos(newToDos)}\n          inputText={this.state.inputText}\n          setInputText={(newInputText) => this.setInputText(newInputText)}\n          setStatus={(newStatus) => this.setStatus(newStatus)}\n        />\n        <ToDoList\n          toDos={this.state.toDos}\n          setToDos={(newToDos) => this.setToDos(newToDos)}\n          filterToDos={this.state.filterToDos}\n          toggleComplete = {this.toggleComplete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}